rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is the owner
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      // Anyone authenticated can read user profiles
      allow read: if isAuthenticated();
      
      // Only the user can write their own profile
      allow write: if isOwner(userId);
    }
    
    // Conversations collection
    match /conversations/{conversationId} {
      // Only participants can read the conversation
      allow read: if isAuthenticated() && 
                     request.auth.uid in resource.data.participantIds;
      
      // Only participants can write to the conversation
      allow write: if isAuthenticated() && 
                      request.auth.uid in resource.data.participantIds;
      
      // Messages subcollection
      match /messages/{messageId} {
        // Only conversation participants can read messages
        allow read: if isAuthenticated() && 
                       request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
        
        // Only conversation participants can write messages
        allow write: if isAuthenticated() && 
                        request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
      }
      
      // Typing indicators subcollection
      match /typing/{userId} {
        // Only conversation participants can read typing indicators
        allow read: if isAuthenticated() && 
                       request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
        
        // Only the user can write their own typing indicator
        allow write: if isAuthenticated() && 
                        isOwner(userId) &&
                        request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
      }
    }
  }
}

